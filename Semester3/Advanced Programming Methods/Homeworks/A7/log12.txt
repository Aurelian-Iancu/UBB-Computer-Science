Id: 1
Execution stack: 
(int v|(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int v
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
int v
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = 20
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = 20
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v = 0|while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)})
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(v = 0|while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)})
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = 0
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = 0
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 20
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
File table:
Heap memory:

Id: 2
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 0
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v = v + 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
v = v + 1
Symbol table: 
v -> 0
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 2
Execution stack: 
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
File table:
Heap memory:

Id: 3
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 1
Output list: 
0
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v = v + 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
v = v + 1
Symbol table: 
v -> 1
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 3
Execution stack: 
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
(Print(v)|v = v + 1)
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
Symbol table: 
v -> 3
Output list: 
0
1
File table:
Heap memory:

Id: 4
Execution stack: 
Print(v)
v = v + 1
Symbol table: 
v -> 2
Output list: 
0
1
File table:
Heap memory:

Id: 1
Execution stack: 
Print(v * 10)
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v = v + 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Print(v * 10)
Symbol table: 
v -> 3
Output list: 
0
1
2
File table:
Heap memory:

Id: 4
Execution stack: 
v = v + 1
Symbol table: 
v -> 2
Output list: 
0
1
2
File table:
Heap memory:

Id: 1
Execution stack: 
Symbol table: 
v -> 3
Output list: 
0
1
2
30
File table:
Heap memory:

Id: 4
Execution stack: 
Symbol table: 
v -> 3
Output list: 
0
1
2
30
File table:
Heap memory:

