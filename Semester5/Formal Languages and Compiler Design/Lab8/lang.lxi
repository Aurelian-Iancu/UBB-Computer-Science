%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>

    int lines = 1;
%}

%option noyywrap
%option caseless

DIGIT [0-9]
NON_ZERO_DIGIT [1-9]
INT_CONSTANT [+-]?{NON_ZERO_DIGIT}{DIGIT}*|0
LETTER [a-zA-Z_ă]
SPECIAL_CHAR [ ?:*\^+=.!]
STRING_CONSTANT (\"({LETTER}|{DIGIT}|{SPECIAL_CHAR})*\")
IDENTIFIER {LETTER}({LETTER}|{DIGIT})*
BAD_IDENTIFIER ({DIGIT})+({LETTER})+({LETTER}|{DIGIT})*

%%

"vector"|"char"|int|"string"|"bagă"|"arată"|"oare"|"altfel"|"atunci"|"cattimp"|"fă"|"start"|"oftype" {printf("%s - reserved word\n", yytext);}

"+"|"-"|"*"|"/"|"=="|"<"|">"|"<="|">="|"mod"|"=" printf("%s - operator\n", yytext);

{IDENTIFIER} {printf("%s - identifier\n", yytext);}

{BAD_IDENTIFIER} {printf("Error at token %s at line %d\n", yytext, lines); exit(1);}

{INT_CONSTANT} {printf("%s - integer constant\n", yytext);}

{STRING_CONSTANT} {printf("%s - string constant\n", yytext);}

"["|"]"|";"|"("|")"|"{"|"}"|"," printf("%s - separator\n", yytext);

[ \t]+ {}

[\n]+ {++lines;}

. {printf("Error at token %s at line %d\n", yytext, lines); exit(1);}

%%

int main(int argc, char** argv) {
    if (argc > 1) 
        yyin = fopen(argv[1], "r");
    else 
        yyin = stdin;
    yylex();
}