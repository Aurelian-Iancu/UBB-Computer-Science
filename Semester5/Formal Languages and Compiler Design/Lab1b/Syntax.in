Syntax:
program ::= "start" {" stmtlist "}"

declaration ::= IDENTIFIER "oftype" type

type1 ::=  "char" | "int" | "str"

arraydecl ::= "vector" "[" nr "]" "oftype" type1

type  ::= type1|arraydecl

cmpdstmt ::= "{" stmtlist "}"

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

simplstmt ::= assignstmt | iostmt | declaration

assignstmt ::= IDENTIFIER "=" expression

expression ::= expression "+" term | expression "-" term | term | term "+" expression | term "-" expression

term ::= term "*" factor | term "/" factor | term "mod" factor | factor | factor "*" term | factor "/" term | factor "mod" term

factor ::= "(" expression ")" | IDENTIFIER | CONSTANT

iostmt ::= "BAGĂ" | "ARATĂ" "(" IDENTIFIER | CONSTANT ")"

structstmt ::= cmpdstmt | ifstmt | whilestmt

ifstmt ::= "OARE" "(" condition ")" "ATUNCI" "{" stmtlist "}" ["ALTFEL" "{" stmtlist "}"]

whilestmt ::= "CATTIMP" "(" condition ")" "FĂ" "{" stmtlist "}"

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "==" | "<>" | ">=" | ">"