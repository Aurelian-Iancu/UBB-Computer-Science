start -> (-1, -1)
{ -> (-1, -1)
identifier -> (3, 0)
oftype -> (-1, -1)
int -> (-1, -1)
; -> (-1, -1)
bagă -> (-1, -1)
( -> (-1, -1)
identifier -> (3, 0)
) -> (-1, -1)
; -> (-1, -1)
identifier -> (23, 0)
oftype -> (-1, -1)
int -> (-1, -1)
; -> (-1, -1)
identifier -> (23, 0)
= -> (-1, -1)
const -> (3, 0)
; -> (-1, -1)
identifier -> (30, 0)
oftype -> (-1, -1)
int -> (-1, -1)
; -> (-1, -1)
identifier -> (30, 0)
= -> (-1, -1)
const -> (1, 0)
; -> (-1, -1)
cattimp -> (-1, -1)
( -> (-1, -1)
identifier -> (23, 0)
< -> (-1, -1)
identifier -> (3, 0)
/ -> (-1, -1)
const -> (3, 0)
) -> (-1, -1)
fă -> (-1, -1)
{ -> (-1, -1)
oare -> (-1, -1)
( -> (-1, -1)
identifier -> (3, 0)
m -> (-1, -1)
o -> (-1, -1)
d -> (-1, -1)
b -> (-1, -1)
) -> (-1, -1)
atunci -> (-1, -1)
{ -> (-1, -1)
identifier -> (30, 0)
= -> (-1, -1)
const -> (2, 0)
; -> (-1, -1)
} -> (-1, -1)
identifier -> (23, 0)
= -> (-1, -1)
identifier -> (23, 0)
+ -> (-1, -1)
const -> (2, 0)
; -> (-1, -1)
} -> (-1, -1)
oare -> (-1, -1)
( -> (-1, -1)
identifier -> (30, 0)
= -> (-1, -1)
= -> (-1, -1)
const -> (2, 0)
) -> (-1, -1)
atunci -> (-1, -1)
{ -> (-1, -1)
arată -> (-1, -1)
( -> (-1, -1)
const -> (39, 0)
) -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
altfel -> (-1, -1)
{ -> (-1, -1)
arată -> (-1, -1)
( -> (-1, -1)
const -> (16, 0)
) -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
} -> (-1, -1)
